"""Add TelegramAccount model

Revision ID: 5dc55f8842d7
Revises: 
Create Date: 2025-06-30 18:40:49.793743

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5dc55f8842d7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('telegram_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.String(length=50), nullable=False),
    sa.Column('telegram_username', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('is_bot_active', sa.Boolean(), nullable=True),
    sa.Column('language_preference', sa.String(length=10), nullable=True),
    sa.Column('notify_posts', sa.Boolean(), nullable=True),
    sa.Column('notify_analytics', sa.Boolean(), nullable=True),
    sa.Column('notify_alerts', sa.Boolean(), nullable=True),
    sa.Column('verification_code', sa.String(length=20), nullable=True),
    sa.Column('verification_expires', sa.DateTime(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_interaction', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('telegram_accounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_telegram_accounts_telegram_id'), ['telegram_id'], unique=True)

    op.create_table('theme_presets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.Column('screenshot_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('theme_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('setting_key', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=True),
    sa.Column('setting_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('setting_key')
    )
    op.create_table('translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('locale', sa.String(length=10), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', 'locale', name='_key_locale_uc')
    )
    op.create_table('theme_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('preset_id', sa.Integer(), nullable=True),
    sa.Column('settings_snapshot', sa.JSON(), nullable=False),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['preset_id'], ['theme_presets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('translation_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('translation_id', sa.Integer(), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('changed_by', sa.Integer(), nullable=True),
    sa.Column('changed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['translation_id'], ['translations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('translation_history')
    op.drop_table('theme_history')
    op.drop_table('translations')
    op.drop_table('theme_settings')
    op.drop_table('theme_presets')
    with op.batch_alter_table('telegram_accounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_telegram_accounts_telegram_id'))

    op.drop_table('telegram_accounts')
    # ### end Alembic commands ###
