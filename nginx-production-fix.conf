server {
    listen 80;
    server_name kwtsocial.com www.kwtsocial.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name kwtsocial.com www.kwtsocial.com;

    ssl_certificate /etc/letsencrypt/live/kwtsocial.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kwtsocial.com/privkey.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Root directory for static files
    root /var/www/html;

    # Backend API (Flask/Gunicorn on port 5000)
    location /api {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for long-running requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Handle CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Admin Panel
    location /admin-panel {
        alias /var/www/html/admin-panel;
        try_files $uri $uri/ /admin-panel/index.html;
        
        # Ensure proper MIME types
        location ~ \.css$ {
            add_header Content-Type text/css;
        }
        location ~ \.js$ {
            add_header Content-Type application/javascript;
        }
    }

    # Client Dashboard
    location /dashboard {
        alias /var/www/html/client-dashboard;
        try_files $uri $uri/ /dashboard/index.html;
    }

    # Client Signup
    location /signup {
        alias /var/www/html/signup;
        try_files $uri $uri/ /signup/index.html;
    }

    # Login page (redirect to dashboard or serve login page)
    location /login {
        # If you have a separate login page
        alias /var/www/html/login;
        try_files $uri $uri/ /login/index.html;
        
        # OR redirect to dashboard
        # return 301 /dashboard/;
    }

    # Root path - serve React app or landing page
    location / {
        # Option 1: Serve React app from build directory
        root /var/www/html/frontend-react/build;
        try_files $uri $uri/ /index.html;
        
        # Option 2: If React app is running on port 3000
        # proxy_pass http://localhost:3000;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_cache_bypass $http_upgrade;
    }

    # Static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }
}