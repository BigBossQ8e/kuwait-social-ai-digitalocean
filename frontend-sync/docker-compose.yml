# Docker Compose for Kuwait Social AI Frontend Development

version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: kuwait-social-frontend
    ports:
      - "3000:80"
    environment:
      - API_URL=http://localhost:5000
      - APP_ENV=development
      - APP_VERSION=1.0.0
    volumes:
      # Mount for development hot reload (optional)
      - ./src:/app/src:ro
      - ./public:/app/public:ro
    networks:
      - kuwait-social-network
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend service (when running full stack)
  backend:
    image: kuwait-social-backend:latest
    container_name: kuwait-social-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://user:password@postgres:5432/kuwait_social_ai
      - REDIS_URL=redis://redis:6379
    networks:
      - kuwait-social-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Database
  postgres:
    image: postgres:15-alpine
    container_name: kuwait-social-postgres
    environment:
      POSTGRES_DB: kuwait_social_ai
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - kuwait-social-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: kuwait-social-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - kuwait-social-network
    restart: unless-stopped

  # Nginx Load Balancer (for production)
  nginx-lb:
    image: nginx:alpine
    container_name: kuwait-social-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - kuwait-social-network
    depends_on:
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  kuwait-social-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16